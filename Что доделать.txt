12.07.18
-------------------------
 5)  Обработку красивую наличия такого чела через ajax(jquery) - допилить не только, если добавляем через тренера(через админа и суперадмина) + проверять также админа и тренеров
 6)  Ограничение доступа на публичный профиль и т.п-> т.е тренер не может смотреть профиль не своего студента, если введет по url, аналогично админ не просмотрим не своих тренеров, не студентов, привязанныъ к его тренерам
 7) ?? Дата создания (пока сделано при реги руками через сайт тренера) - пока хз, что имел ввиду ??
 8)  Придумать как понимать что за профиль мы смотри - надо тестить(переделывать мб)
 (либо через GET /publicProfile/admin/... /publicProfile/coach/.. и т.п,
  либо через доп запросы к БД и тащим какое нить св-во, либо ....) - пока через дополнительный каталог -- Вроде пока стабильно итак работает
  9) Пагинация пользователей, если смотрим через публичные

  FRONT:
  1) ajax удаление, добавление, редактирование, пагинация всех типов пользователей
  2) страница о разработчиках
  3) логин и пароль pid - по лицу
  4) Прелоадер на картинках - в идеале универсальный механизм для всего сайта

  BACKEND:
  1) public_profile.js отрефакторить (т.к много лишних раз пробегаемся для loginAndPasswordPictograms)
  2) восстановлениие пароля
  3) логин и пароль тренера через ajax

    // router.post('/signup', function (req, res, next) { 
  //   passport.authenticate('signup',
  //   {
  //     successRedirect: '/personalArea/1',
  //     failureRedirect: '/',
  //     failureFlash: true
  //   }, 
  //   function (error, user, info) {
  //     //console.log(info); 
  //    // console.log( typeof(req.flash(info)));
  //     if (req.flash(info) != undefined)
  //        res.status(400).send('User already exists with this email');
  //   })(req, res, next); 
  // });

  // router.post('/login', function (req, res, next) { 
  //   passport.authenticate('login',
  //   {
  //     successRedirect: '/personalArea/1',
  //     failureRedirect: '/',
  //     failureFlash: true
  //   }, 
  //   function (error, user, info) {
  //   //   console.log(info);
  //   //   //console.log(info);
  //   //  // console.log( typeof(req.flash(info)));
  //   //   if (req.flash(info) != undefined) 
  //   //      res.status(400).send('Invalid login or password');
  //   })(req, res, next); 
  // });

  FRONT+BACKEND:
  Подобное post('/deleteStudent/id:_id) заменить на post('/delete-pid/id:_id)

<script defer>
    //path of page declaration
    var path = "collectionMoney";
    //settings from data base
    var settings = '<%-settings%>';
    settings = JSON.parse(settings); //parse to get object

    // game elements declaration
    var progressBars = document.getElementsByClassName("progressBar");
    var againBtns = document.getElementsByClassName("againBtn");
    var wallets = document.getElementsByClassName("wallet");
    var baskets = document.getElementsByClassName("basket");
    var nextBtns = document.getElementsByClassName("nextBtn");
    var backBtns = document.getElementsByClassName("backBtn");

    // game views declaration
    var games = document.getElementsByClassName("game");
    var [collectionMoney, selectionGoods, paymentPurchase, takeChangee] = [...games];

    // pagination buttons declaration;
    var collectionMoneyBtn = document.getElementById("collectionMoneyBtn");
    var selectionGoodsBtn = document.getElementById("selectionGoodsBtn");
    var paymentPurchaseBtn = document.getElementById("paymentPurchaseBtn");
    var takeChangeeBtn = document.getElementById("takeChangeeBtn");

    var paginationBtns = [
      collectionMoneyBtn,
      selectionGoodsBtn,
      paymentPurchaseBtn,
      takeChangeeBtn
    ];

    var hostName = '<%-host%>';

    // changers declaration
    var nextBackBtnsChanger = document.getElementById("nextBackBtnsChanger");
    var progressBarChanger = document.getElementById("progressBarChanger");
    var againBtnChanger = document.getElementById("againBtnChanger");
    var walletChanger = document.getElementById("walletChanger");
    var basketChanger = document.getElementById("basketChanger");
    var submitBtn = document.getElementById("submitBtn");
    var fCurrency = document.getElementById("fсurrency");

    // main part
    paginationLogic();

    // listeners of pagination buttons
    collectionMoneyBtn.addEventListener("click", pageChanger);
    selectionGoodsBtn.addEventListener("click", pageChanger);
    paymentPurchaseBtn.addEventListener("click", pageChanger);
    takeChangeeBtn.addEventListener("click", pageChanger);

    // listeners of changers
    nextBackBtnsChanger.addEventListener('change', changePairElems);
    progressBarChanger.addEventListener('change', changeElem);
    againBtnChanger.addEventListener('change', changeElem);
    walletChanger.addEventListener('change', changeElem);
    basketChanger.addEventListener('change', changeElem);

    // set values of changers from DB
    nextBackBtnsChanger.value = getValue(settings.nextBtn);
    progressBarChanger.checked = settings.progressBar;

    settings.progressBar == "true" ?
    progressBarChanger.checked = true : progressBarChanger.checked = false;
    
    againBtnChanger.value = getValue(settings.againBtn);
    walletChanger.value = getValue(settings.wallet);
    basketChanger.value = getValue(settings.basket);

    showFromDB(nextBackBtnsChanger);
    showFromDB(progressBarChanger);
    showFromDB(againBtnChanger);
    showFromDB(walletChanger);
    showFromDB(basketChanger);
    //end of main part

    // function declaration part
    function pageChanger(elem) {
      paginationBtns.map(item => {
        item.classList.remove("a-active");
      })
      elem.target.classList.add("a-active");
      switch (elem.target.id) {
        case "collectionMoneyBtn":
          path = "collectionMoney";
          paginationLogic();
          break;

        case "selectionGoodsBtn":
          path = "selectionGoods";
          paginationLogic();
          break;

        case "paymentPurchaseBtn":
          path = "paymentPurchase";
          paginationLogic();
          break;

        case "takeChangeeBtn":
          path = "takeChangee";
          paginationLogic();
          break;

        default:
          break;
      }
    }

    function paginationLogic() {
      hideAllGames();

      [againBtnChanger, basketChanger, walletChanger].map(item => {
        setDisableChanger(false, item);
      })

      switch (path) {
          case "collectionMoney":
              collectionMoney.style.display = "block";

              setDisableChanger(true, againBtnChanger);
              setDisableChanger(true, basketChanger);
              break;

          case "selectionGoods":
              selectionGoods.style.display = "block";

              setDisableChanger(true, againBtnChanger);
              setDisableChanger(true, walletChanger);
              break;

          case "paymentPurchase":
              paymentPurchase.style.display = "block";
              setDisableChanger(true, againBtnChanger);
              setDisableChanger(true, basketChanger);
              break;

          case "takeChangee":
              takeChangee.style.display = "block";
              setDisableChanger(true, basketChanger);
              break;

          default:
              break;
      }
    }

    function tuneUpAllElems() {
      var elems = []
    }

    function hideAllGames() {
      for (let game of games)
        game.style.display = "none";
    }

    function setDisableChanger(bool, elem) {
        if (bool || bool == undefined) {
          elem.classList.add("disabled");
          elem.setAttribute("disabled", "disabled");

          var label = elem.parentElement;
          label.classList.add("disabled");
        } else {
          elem.classList.remove("disabled");
          elem.removeAttribute("disabled");

          var label = elem.parentElement;
          label.classList.remove("disabled");
        }
    }

    // change alone element
    function changeElem(changer) {
        if (this.getAttribute('type') == 'checkbox') {
          for (let progressBar of progressBars)
              progressBar.classList.toggle("none");
        }
        else {
            var searchClass = this.id.toString().replace('Changer', '');
            var elems = document.getElementsByClassName(searchClass);

            for (let elem of elems) {
              var imagePath = elem.src;
              imagePath = imagePath.replace(/\w.png/, `${this.value}.png`);
              elem.src = imagePath;
            }
        }
    }

    // change pair elements
    function changePairElems() {
      if (this.id == "nextBackBtnsChanger") {
          var imagePathNextBtn = nextBtns[0].src;
          imagePathNextBtn = imagePathNextBtn.replace(/\w.png/, `${nextBackBtnsChanger.value}.png`);

          for (let nextBtn of nextBtns)
            nextBtn.src = imagePathNextBtn;

          var imagePathBackBtn = backBtns[0].src;

          imagePathBackBtn = imagePathBackBtn.replace(/\w.png/, `${nextBackBtnsChanger.value}.png`);

          for (let backBtn of backBtns)
            backBtn.src = imagePathBackBtn;
        }
    }

    ////////!!!!!!
    function showFromDB(changer) {
        if (changer.getAttribute('type') == 'checkbox')
          for (let progressBar of progressBars)
              if (changer.checked)
                progressBar.classList.remove("none");
              else progressBar.classList.add("none");
        else if (changer.id == "nextBackBtnsChanger") {
          var imagePath = backBtns[0].src;
          imagePath = imagePath.replace(/\w.png/, `${changer.value}.png`);
          for (let backBtn of backBtns) {
            backBtn.src = imagePath;
          }

          imagePath = nextBtns[0].src;
          imagePath = imagePath.replace(/\w.png/, `${changer.value}.png`);
          for (let nextBtn of nextBtns) {
            nextBtn.src = imagePath;
          }
        }
        else {
            var searchClass = changer.id.toString().replace('Changer', '');
            var elems = document.getElementsByClassName(searchClass);
            var imagePath = elems[0].src;
            imagePath = imagePath.replace(/\w.png/, `${changer.value}.png`);

            for (let elem of elems)
              elem.src = imagePath;
        }
    }

    function getValue(areaFromDb) {
        var value = areaFromDb.toString();
        value = value.match(/\d.png/)[0];
        value = value.replace('.png', '');

        return parseInt(value);
    }

    submitBtn.onclick = function () {
        var newSettings = {};


        // т.к для этой игры всегда есть кнопка вперед/назад
        // back
        newSettings.backBtn = backBtns[0].src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        // progress bar
        newSettings.progressBar = progressBarChanger.checked;
        // next
        newSettings.nextBtn = nextBtns[0].src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        // again
        newSettings.againBtn = againBtns[0].src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        // wallet
        newSettings.wallet = wallets[0].src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        // basket
        newSettings.basket = baskets[0].src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        //
        newSettings.fCurrency = fCurrency.selectedIndex;

        $.ajax({
            type: 'POST',
            url: window.location.pathname,
            dataType: 'json',
            data: newSettings,
            success: console.log('Settings Saved'),
        });
    }
</script>

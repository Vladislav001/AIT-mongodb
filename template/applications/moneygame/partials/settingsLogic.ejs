<script defer>
    //path of page declaration
    var path = window.location.pathname.toString();
    path = path.replace("/customizeMoneyGame", "").replace(/\/id.*/, "");
    //settings from data base
    var settings = '<%-settings%>';
    settings = JSON.parse(settings); //parse to get object

    //get true/false from string
    settings.progressBar == 'true' ? settings.progressBar = true : settings.progressBar = false;

    console.log(settings);

    // game elems declaration
    var backBtn = document.getElementById("backBtn");
    var progressBar = document.getElementById("progressBar");
    var nextBtn = document.getElementById("nextBtn");
    var againBtn = document.getElementById("againBtn");
    var wallet = document.getElementById("wallet");
    var basket = document.getElementById("basket");

    var hostName = '<%-host%>';

     console.log(hostName);
   
    // changers declaration
    var backBtnChanger = document.getElementById("backBtnChanger");
    var progressBarChanger = document.getElementById("progressBarChanger");
    var nextBtnChanger = document.getElementById("nextBtnChanger");
    var againBtnChanger = document.getElementById("againBtnChanger");
    var walletChanger = document.getElementById("walletChanger");
    var basketChanger = document.getElementById("basketChanger");
    var submitBtn = document.getElementById("submitBtn");

    // main part
    switch (path) {
        case "/collectionMoney":
            disableChanger(backBtnChanger);
            disableChanger(againBtnChanger);
            disableChanger(basketChanger);
            ////////////////////////////////////////////
            nextBtn.src = settings.nextBtn;
            wallet.src = settings.wallet;
            break;

        case "/selectionGoods":
            disableChanger(againBtnChanger);
            disableChanger(walletChanger);
            ////////////////////////////////////////////
            backBtn.src = settings.backBtn;
            nextBtn.src = settings.nextBtn;
            basket.src = settings.basket;
            break;

        case "/paymentPurchase":
            disableChanger(againBtnChanger);
            disableChanger(basketChanger);
            ////////////////////////////////////////////
            backBtn.src = settings.backBtn;
            nextBtn.src = settings.nextBtn;
            wallet.src = settings.wallet;
            break;

        case "/takeChangee":
            disableChanger(nextBtnChanger);
            disableChanger(basketChanger);
            ////////////////////////////////////////////
            backBtn.src = settings.backBtn;
            againBtn.src = settings.againBtn;
            wallet.src = settings.wallet;
            break;

        default:
            break;
    }

    //listeners of changers
    backBtnChanger.addEventListener('change', changeElem);
    progressBarChanger.addEventListener('change', changeElem);
    nextBtnChanger.addEventListener('change', changeElem);
    againBtnChanger.addEventListener('change', changeElem);
    walletChanger.addEventListener('change', changeElem);
    basketChanger.addEventListener('change', changeElem);

    //input values from DB
    backBtnChanger.value = getValue(settings.backBtn);
    progressBarChanger.checked = settings.progressBar;
    nextBtnChanger.value = getValue(settings.nextBtn);
    againBtnChanger.value = getValue(settings.againBtn);
    walletChanger.value = getValue(settings.wallet);
    basketChanger.value = getValue(settings.basket);

    // get values from URLs
    backBtnChanger.value = getValue(settings.backBtn);
    progressBarChanger.checked = settings.progressBar;
    nextBtnChanger.value = getValue(settings.nextBtn);
    againBtnChanger.value = getValue(settings.againBtn);
    walletChanger.value = getValue(settings.wallet);
    basketChanger.value = getValue(settings.basket);


    showFromDB(progressBarChanger);

    //end of main part

    // function declaration part
    function disableChanger(elem) {
        elem.classList.add("disabled");
        elem.setAttribute("disabled", "disabled");

        var label = elem.parentElement;
        label.classList.add("disabled");
    }

    function changeElem() {
        if (this.getAttribute('type') == 'checkbox') {
            this.checked ? progressBar.classList.remove('none') : progressBar.classList.add('none');
        }
            
        else {
            var searchId = this.id.toString().replace('Changer', '');
            var elem = document.getElementById(searchId);

            var imagePath = elem.src;
            imagePath = imagePath.replace(/\w.png/, `${this.value}.png`);
            elem.src = imagePath;
        }
    }

    function showFromDB(changer) {
        if (changer.getAttribute('type') == 'checkbox')
            changer.checked ? progressBar.classList.remove('none') : progressBar.classList.add('none');

        else {
            var searchId = changer.id.toString().replace('Changer', '');
            var elem = document.getElementById(searchId);

            var imagePath = elem.src;
            imagePath = imagePath.replace(/\w.png/, `${this.value}.png`);
            elem.src = imagePath;
        }
    }

    function getValue(areaFromDb) {
        var value = areaFromDb.toString();
        value = value.match(/\d.png/)[0];
        value = value.replace('.png', '');

        // console.log(value);

        return parseInt(value);
    }

    submitBtn.onclick = function () {
        var newSettings = {};

        if (backBtn.classList.contains('none')) newSettings.backBtn = settings.backBtn;
        else newSettings.backBtn = backBtn.src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        
        newSettings.progressBar = progressBarChanger.checked.toString();

        if (nextBtn.classList.contains('none')) newSettings.nextBtn = settings.nextBtn;
        else newSettings.nextBtn = nextBtn.src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');

        if (againBtn.classList.contains('none')) newSettings.againBtn = settings.againBtn;
        else newSettings.againBtn = againBtn.src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        
        if (wallet.classList.contains('none')) newSettings.wallet = settings.wallet;
        else newSettings.wallet = wallet.src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');
        
        if (basket.classList.contains('none')) newSettings.basket = settings.basket;
        else newSettings.basket = basket.src.replace(/http(s?):\/\//, '').replace(`${hostName}`, '');

        console.log(newSettings);

        $.ajax({
            type: 'POST',
            url: window.location.pathname,
            dataType: 'json',
            data: newSettings,
            success: console.log('Success'),
        });
    }
</script>